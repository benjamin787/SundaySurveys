{"version":3,"sources":["components/SurveyCard.js","components/SurveyContainer.js","components/Home.js","components/SurveyPage.js","components/CreatePage.js","App.js","index.js"],"names":["SurveyCard","survey","setOpenSurvey","onClick","className","to","id","fontSize","title","SurveyContainer","surveys","map","key","Home","color","SurveyPage","openSurvey","routerProps","survey_questions","Survey","type","elements","question","name","content","isRequired","choices","submitAnswers","form","event","console","log","fetch","method","headers","body","JSON","stringify","history","push","model","onComplete","questionsOnPageMode","navigateToUrl","CreatePage","useState","setTitle","question1","setQuestion1","question2","setQuestion2","question3","setQuestion3","question4","setQuestion4","placeholder","value","onChange","e","target","required","onSubmit","preventDefault","stopPropogation","data","surveyURL","App","setSurveys","useEffect","a","promise","json","surveyData","fetchData","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"4RAIe,SAASA,EAAT,GAAgD,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cAIzC,OACI,0BAAMC,QAHS,kBAAMD,EAAcD,IAGRG,UAAU,eACjC,yBAAKA,UAAU,IACX,kBAAC,IAAD,CAAMC,GAAE,mBAAcJ,EAAOK,KACzB,kBAAC,IAAD,CAAgBC,SAAS,UACzB,4BAAQH,UAAU,gBAAgBH,EAAOO,UCT9C,SAASC,EAAT,GAAsD,IAA3BC,EAA0B,EAA1BA,QAASR,EAAiB,EAAjBA,cAM/C,OACI,yBAAKE,UAAU,mBALcM,EAAQC,KAAI,SAAAV,GACzC,OAAO,kBAACD,EAAD,CAAYC,OAAQA,EAAQW,IAAKX,EAAOK,GAAIJ,cAAeA,OAM9D,kBAAC,IAAD,CAAMG,GAAG,KAAK,4C,6DCgBXQ,MApBf,WACI,OACI,yBAAKT,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,gBAAgBD,UAAU,gBAC/B,kBAAC,IAAD,CAAQU,MAAM,UAAUP,SAAS,UACjC,wBAAIH,UAAU,cAAd,mBAA2C,6BAA3C,2BACA,wBAAIA,UAAU,cAAd,MAEJ,kBAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,gBAC1B,kBAAC,IAAD,CAAYU,MAAM,UAAUP,SAAS,UACrC,wBAAIH,UAAU,cAAd,2BAEJ,kBAAC,IAAD,CAAMC,GAAG,GAAGD,UAAU,gBAClB,kBAAC,IAAD,CAAUG,SAAS,UACnB,wBAAIH,UAAU,cAAd,0B,QC6CDW,MA7Df,YAAiE,IAA3CC,EAA0C,EAA1CA,WAAYd,EAA8B,EAA9BA,cAAee,EAAe,EAAfA,YAErCC,EAAqBF,EAArBE,iBAuBFjB,EAAS,IAAIkB,QAPN,CACLX,MAAOQ,EAAWR,MAClBY,KAAM,SACNC,SAhBGH,EAAiBP,KAAI,SAAAW,GACxB,MACI,CAAEC,KAAK,GAAD,OAAKD,EAAShB,IACpBE,MAAM,GAAD,OAAKc,EAASE,SACnBC,YAAY,EACZL,KAAM,aACNM,QAAS,CAAC,EAAE,EAAE,EAAE,SAgBtBC,EAAgB,SAACC,EAAMC,GACzBC,QAAQC,IAAIH,GACZI,MA/BY,2CA+BO,CACfC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUT,KAEzB1B,EAAc,KAgBlB,OACI,yBAAKE,UAAU,mBACTY,IAAe,GACXC,EAAYqB,QAAQC,KAAK,KAd/B,kBAAC,SAAD,CACI3B,IAAKI,EAAWV,GAChBkC,MAAOvC,EACPwC,WAAYd,EACZe,oBAAoB,aACpBC,cAAc,MAYlB,kBAAC,IAAD,CAAMtC,GAAG,KAAI,6CC8BVuC,MAvFf,YAAqC,EAAf3B,YAAgB,IAAD,EAEP4B,mBAAS,IAFF,mBAE1BrC,EAF0B,KAEnBsC,EAFmB,OAGCD,mBAAS,IAHV,mBAG1BE,EAH0B,KAGfC,EAHe,OAICH,mBAAS,IAJV,mBAI1BI,EAJ0B,KAIfC,EAJe,OAKCL,mBAAS,IALV,mBAK1BM,EAL0B,KAKfC,EALe,OAMCP,mBAAS,IANV,mBAM1BQ,EAN0B,KAMfC,EANe,KAwCjC,OACI,6BACI,0BAAMlD,UAAU,eACZ,2BAAOmD,YAAY,eACfC,MAAOhD,EACPiD,SArCM,SAACC,GAAD,OAAOZ,EAASY,EAAEC,OAAOH,QAsC/BI,UAAQ,EACRxD,UAAU,kBACZ,6BACF,8BAAUmD,YAAY,+BAClBC,MAAOT,EACPU,SA1CU,SAACC,GAAD,OAAOV,EAAaU,EAAEC,OAAOH,QA2CvCI,UAAQ,EACRxD,UAAU,kBACZ,6BACF,8BAAUmD,YAAY,+BAClBC,MAAOP,EACPQ,SA/CU,SAACC,GAAD,OAAOR,EAAaQ,EAAEC,OAAOH,QAgDvCI,UAAQ,EACRxD,UAAU,kBACZ,6BACF,8BAAUmD,YAAY,+BAClBC,MAAOL,EACPM,SApDU,SAACC,GAAD,OAAON,EAAaM,EAAEC,OAAOH,QAqDvCI,UAAQ,EACRxD,UAAU,kBACZ,6BACF,8BAAUmD,YAAY,+BAClBC,MAAOH,EACPI,SAzDU,SAACC,GAAD,OAAOJ,EAAaI,EAAEC,OAAOH,QA0DvCI,UAAQ,EACRxD,UAAU,kBACZ,6BACF,kBAAC,IAAD,CAAMC,GAAG,KACL,4BACIe,KAAK,SACLyC,SA7DC,SAACH,GAClBA,EAAEI,iBACFJ,EAAEK,kBAYF,IAAMC,EAAO,CAAExD,MAXA,CAACuC,EAAWE,EAAWE,EAAWE,GAAW1C,KAAI,SAAAW,GAC5D,MACI,CACAC,KAAK,GAAD,OAAKD,EAAShB,IAClBE,MAAM,GAAD,OAAKuC,GACVtB,YAAY,EACZL,KAAM,aACNM,QAAS,CAAC,EAAE,EAAE,EAAE,QAKxBM,MAjCU,gCAiCO,CACbC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU2B,MA4CT5D,UAAU,iBAHd,6BAQR,kBAAC,IAAD,CAAMC,GAAG,KAAI,6CChFnB4D,EAAY,gCAkDHC,MAhDf,WAAgB,IAAD,EAEiBrB,mBAAS,IAF1B,mBAENnC,EAFM,KAEGyD,EAFH,OAGuBtB,mBAAS,IAHhC,mBAGN7B,EAHM,KAGMd,EAHN,KAcb,OATAkE,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACsBrC,MAAMiC,GAD5B,cACMK,EADN,gBAEyBA,EAAQC,OAFjC,OAEMC,EAFN,OAGEL,EAAWK,GAHb,4CADc,uBAAC,WAAD,wBAMdC,KACC,IAGD,yBAAKrE,UAAU,OACb,yBAAKA,UAAU,mBACb,gCAAQ,+CACR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,IAAIC,UAAW/D,IACjC,kBAAC,IAAD,CACE6D,OAAK,EAACC,KAAK,WACXE,OAAQ,SAAA5D,GAAW,OACjB,kBAACR,EAAD,eACAC,QAASA,EACTR,cAAeA,GACXe,OAGR,kBAAC,IAAD,CACE0D,KAAI,mBAAc3D,EAAWV,IAC7BuE,OAAQ,SAAA5D,GAAW,OAAI,kBAAC,EAAD,eACrBP,QAASA,EACTM,WAAYA,EACZd,cAAeA,GACXe,OAGR,kBAAC,IAAD,CACE0D,KAAM,gBACNE,OAAQ,SAAA5D,GAAW,OAAI,kBAAC,EAAeA,UC7CnD6D,IAASD,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFE,SAASC,eAAe,W","file":"static/js/main.8a5f41f6.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AssessmentIcon from '@material-ui/icons/Assessment'\n\nexport default function SurveyCard({ survey, setOpenSurvey }) {\n\n    const takeSurvey = () => setOpenSurvey(survey)\n\n    return (\n        <span onClick={takeSurvey} className='survey-card'>\n            <div className=''>\n                <Link to={`/surveys/${survey.id}`} >\n                    <AssessmentIcon fontSize='large' />\n                    <button className='survey-title'>{survey.title}</button>\n                </Link>\n            </div>\n        </span>\n    )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SurveyCard from './SurveyCard'\n\nexport default function SurveyContainer({ surveys, setOpenSurvey }) {\n    \n    const displaySurveyCards = () => surveys.map(survey => {\n        return <SurveyCard survey={survey} key={survey.id} setOpenSurvey={setOpenSurvey} />\n    })\n\n    return (\n        <div className='background-card'>\n            {displaySurveyCards()}\n            <Link to='/' ><button>Cancel</button></Link>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AddBox from '@material-ui/icons/AddBox'\nimport Assignment from '@material-ui/icons/Assignment'\nimport PieChart from '@material-ui/icons/PieChart'\n\nimport 'survey-react/survey.css'\n\n\nfunction Home() {\n    return (\n        <div className='link-list' >\n            <Link to='/createSurvey' className='home-buttons'>\n                <AddBox color='primary' fontSize='large' />\n                <h2 className='home-label'>Bug your friends<br></br>with endless questions!</h2>\n                <h2 className='home-label'> </h2>\n            </Link>\n            <Link to='/surveys' className='home-buttons'>\n                <Assignment color='primary' fontSize='large' />\n                <h2 className='home-label'>Check out your surveys</h2>\n            </Link>\n            <Link to='' className='home-buttons'>\n                <PieChart fontSize='large'/>\n                <h2 className='home-label'>Past Survey Results</h2>\n            </Link>\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport * as Survey from 'survey-react'\nimport 'survey-react/survey.css'\n\nconst responseURL = 'http://localhost:3000/question_responses'\n\nfunction SurveyPage({ openSurvey, setOpenSurvey, routerProps }) {\n\n    const { survey_questions } = openSurvey\n\n    const makeQuestions = () => {\n        return survey_questions.map(question => {\n            return (\n                { name: `${question.id}`,\n                title: `${question.content}`,\n                isRequired: true,\n                type: 'radiogroup',\n                choices: [1,2,3,4]\n                }\n            )\n        })\n    }\n\n    const makeJSON = () => {\n        return ( {\n            title: openSurvey.title,\n            type: 'survey',\n            elements: makeQuestions()\n        })\n    }\n    \n    const survey = new Survey.Model(makeJSON())\n    \n    const submitAnswers = (form, event) => {\n        console.log(form)\n        fetch(responseURL, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(form)\n        })\n        setOpenSurvey({})\n    }\n    \n    const displaySurvey = () => {\n        return ( \n            <Survey.Survey\n                key={openSurvey.id}\n                model={survey}\n                onComplete={submitAnswers}\n                questionsOnPageMode='singlePage'\n                navigateToUrl='/'\n\n            />\n        )\n    }\n    \n    return (\n        <div className='background-card'>\n            { openSurvey === {}\n                ? routerProps.history.push('/')\n                : displaySurvey()\n            }\n            <Link to='/'><button>Cancel</button></Link>\n        </div>\n    )\n}\n\nexport default SurveyPage","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst createURL = 'http://localhost:3000/surveys'\nlet questionList = []\n\nfunction CreatePage({ routerProps }) {\n\n    const [title, setTitle] = useState('')\n    const [question1, setQuestion1] = useState('')\n    const [question2, setQuestion2] = useState('')\n    const [question3, setQuestion3] = useState('')\n    const [question4, setQuestion4] = useState('')\n    \n    const onChangeTitle = (e) => setTitle(e.target.value)\n    const onChangeQuestion1 = (e) => setQuestion1(e.target.value)\n    const onChangeQuestion2 = (e) => setQuestion2(e.target.value)\n    const onChangeQuestion3 = (e) => setQuestion3(e.target.value)\n    const onChangeQuestion4 = (e) => setQuestion4(e.target.value)\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()    \n        e.stopPropogation()\n        questionList = [question1, question2, question3, question4].map(question => {\n            return (\n                {\n                name: `${question.id}`,\n                title: `${question1}`,\n                isRequired: true,\n                type: 'radiogroup',\n                choices: [1,2,3,4]\n                }\n            )\n        })\n        const data = { title: questionList }\n        fetch(createURL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        })\n    }\n\n\n\n    \n    return (\n        <div>\n            <form className='create-form'>\n                <input placeholder='Survey Title' \n                    value={title}\n                    onChange={onChangeTitle}\n                    required\n                    className='create-inputs'\n                /><br/>\n                <textarea placeholder='What would you like to know?'\n                    value={question1}\n                    onChange={onChangeQuestion1}\n                    required\n                    className='create-inputs'\n                /><br/>\n                <textarea placeholder='What would you like to know?'\n                    value={question2}\n                    onChange={onChangeQuestion2}\n                    required\n                    className='create-inputs'\n                /><br/>\n                <textarea placeholder='What would you like to know?'\n                    value={question3}\n                    onChange={onChangeQuestion3}\n                    required\n                    className='create-inputs'\n                /><br/>\n                <textarea placeholder='What would you like to know?'\n                    value={question4}\n                    onChange={onChangeQuestion4}\n                    required\n                    className='create-inputs'\n                /><br/>\n                <Link to='/'>\n                    <button\n                        type='submit'\n                        onSubmit={handleSubmit}\n                        className='create-inputs'\n                    >Bundle Add Your Survey!\n                    </button>\n                </Link>\n            </form>\n            <Link to='/'><button>Cancel</button></Link>\n        </div>\n    )\n}\n\nexport default CreatePage\n\n\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom'\nimport SurveyContainer from './components/SurveyContainer'\nimport Home from './components/Home'\nimport SurveyPage from './components/SurveyPage'\nimport CreatePage from './components/CreatePage'\n\nconst surveyURL = 'http://localhost:3000/surveys'\n\nfunction App() {\n\n  const [surveys, setSurveys] = useState([])\n  const [openSurvey, setOpenSurvey] = useState({})\n\n  useEffect(() => {\n    async function fetchData() {\n      let promise = await fetch(surveyURL)\n      let surveyData = await promise.json()\n      setSurveys(surveyData)\n    }\n    fetchData()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className='background-card'>\n        <header><h1>Sunday Surveys</h1></header>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route \n            exact path='/surveys'\n            render={routerProps =>\n              <SurveyContainer\n              surveys={surveys}\n              setOpenSurvey={setOpenSurvey}\n              {...routerProps}\n              />}\n              />\n          <Route\n            path={`/surveys/${openSurvey.id}`}\n            render={routerProps => <SurveyPage\n              surveys={surveys}\n              openSurvey={openSurvey}\n              setOpenSurvey={setOpenSurvey}\n              {...routerProps}\n              />}\n          />\n          <Route\n            path={'/createSurvey'}\n            render={routerProps => <CreatePage {...routerProps} />}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}