{"ast":null,"code":"var _jsxFileName = \"/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-forms';\nconst responseURL = 'http://localhost:3000/question_responses';\n\nfunction SurveyPage({\n  survey\n}) {\n  const {\n    register,\n    handleSubmit,\n    getValue\n  } = useForm();\n\n  const displayQuestions = () => {\n    survey.survey_questions.map(question => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"question-li\",\n        key: question.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }\n      }, question.content), /*#__PURE__*/React.createElement(\"input\", {\n        name: question.id,\n        type: \"checkbox\",\n        ref: register({\n          required: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }));\n    });\n  };\n\n  const submitAnswers = async () => {\n    const answers = getValue();\n    const promise = await fetch(responseURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(answers)\n    });\n    const confirmation = await promise.json(); // bubble appears either confirming/thanking or telling to fix something\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, survey.title), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"questions-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, displayQuestions()), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onSubmit: handleSubmit(submitAnswers),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n}\n\nexport default SurveyPage;","map":{"version":3,"sources":["/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js"],"names":["React","useForm","responseURL","SurveyPage","survey","register","handleSubmit","getValue","displayQuestions","survey_questions","map","question","id","content","required","submitAnswers","answers","promise","fetch","method","headers","body","JSON","stringify","confirmation","json","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,MAAMC,WAAW,GAAG,0CAApB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAgC;AAE5B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAuCN,OAAO,EAApD;;AAEA,QAAMO,gBAAgB,GAAG,MAAM;AAC3BJ,IAAAA,MAAM,CAACK,gBAAP,CAAwBC,GAAxB,CAA4BC,QAAQ,IAAI;AACpC,0BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAA4B,QAAA,GAAG,EAAEA,QAAQ,CAACC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQD,QAAQ,CAACE,OAAjB,CADJ,eAEI;AAAO,QAAA,IAAI,EAAEF,QAAQ,CAACC,EAAtB;AAA0B,QAAA,IAAI,EAAC,UAA/B;AAA0C,QAAA,GAAG,EAAEP,QAAQ,CAAC;AAACS,UAAAA,QAAQ,EAAE;AAAX,SAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH,KAPD;AAQH,GATD;;AAWA,QAAMC,aAAa,GAAG,YAAY;AAC9B,UAAMC,OAAO,GAAGT,QAAQ,EAAxB;AACA,UAAMU,OAAO,GAAG,MAAMC,KAAK,CAAChB,WAAD,EAAc;AACrCiB,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAF4B;AAGrCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AAH+B,KAAd,CAA3B;AAKA,UAAMQ,YAAY,GAAG,MAAMP,OAAO,CAACQ,IAAR,EAA3B,CAP8B,CAQ9B;AACH,GATD;;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKrB,MAAM,CAACsB,KAAZ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,gBAAgB,EADrB,CADJ,eAII;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEF,YAAY,CAACS,aAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CAFJ,CADJ;AAWH;;AAED,eAAeZ,UAAf","sourcesContent":["import React from 'react'\nimport { useForm } from 'react-hook-forms'\n\nconst responseURL = 'http://localhost:3000/question_responses'\n\nfunction SurveyPage({ survey }) {\n\n    const { register, handleSubmit, getValue } = useForm()\n\n    const displayQuestions = () => {\n        survey.survey_questions.map(question => {\n            return ( \n                <li className='question-li' key={question.id}>\n                    <label>{question.content}</label>\n                    <input name={question.id} type='checkbox' ref={register({required: true})} />\n                </li>\n            )\n        })\n    }\n\n    const submitAnswers = async () => {\n        const answers = getValue()\n        const promise = await fetch(responseURL, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(answers)\n        })\n        const confirmation = await promise.json()\n        // bubble appears either confirming/thanking or telling to fix something\n    }\n    \n    return (\n        <div>\n            <h2>{survey.title}</h2>\n            <form>\n                <ol className='questions-list'>\n                    {displayQuestions()}\n                </ol>\n                <button type='submit' onSubmit={handleSubmit(submitAnswers)}>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SurveyPage\n"]},"metadata":{},"sourceType":"module"}