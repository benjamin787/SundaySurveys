{"ast":null,"code":"var _jsxFileName = \"/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport RadioGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\nconst responseURL = 'http://localhost:3000/question_responses';\n\nfunction SurveyPage({\n  openSurvey\n}) {\n  const {\n    register,\n    handleSubmit,\n    getValues\n  } = useForm();\n  const json = {\n    title: `${openSurvey.title}`,\n    pages: [{\n      name: 'Page 1',\n      elements: [{\n        type: 'panel',\n        name: `${openSurvey.id}`,\n        elements: []\n      }]\n    }]\n  };\n  const survey = new Survey.Survey(json);\n\n  const displayQuestions = () => {\n    // get by name method\n    const panel = survey.getPanelByName(`${openSurvey.id}`);\n    openSurvey.survey_questions.forEach(question => {\n      panel.addQuestion({\n        name: `${question.id}`,\n        title: `${questioin.content}`,\n        isRequired: true,\n        type: 'radiogroup'\n      });\n      console.log('question displayed?', question);\n    });\n  };\n\n  const onComplete = (survey, options) => {\n    console.log('survey results' + JSON.stringify(survey.data));\n  };\n\n  const submitAnswers = event => {\n    event.preventDefault();\n    const answers = getValues();\n    console.log(answers);\n    const confirmation = fetch(responseURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(answers)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \" */}\", /*#__PURE__*/React.createElement(Survey.Survey, {\n    json: json,\n    onComplete: onComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 26\n    }\n  }, \"Cancel\")));\n}\n\nexport default SurveyPage;","map":{"version":3,"sources":["/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js"],"names":["React","useState","useForm","Link","RadioGroup","Radio","ListItem","FormControl","FormControlLabel","FormLabel","Survey","responseURL","SurveyPage","openSurvey","register","handleSubmit","getValues","json","title","pages","name","elements","type","id","survey","displayQuestions","panel","getPanelByName","survey_questions","forEach","question","addQuestion","questioin","content","isRequired","console","log","onComplete","options","JSON","stringify","data","submitAnswers","event","preventDefault","answers","confirmation","fetch","method","headers","body"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { Link } from 'react-router-dom'\nimport RadioGroup from '@material-ui/core/FormGroup'\nimport Radio from '@material-ui/core/Radio'\nimport ListItem from '@material-ui/core/ListItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport * as Survey from 'survey-react'\nimport 'survey-react/survey.css'\n\nconst responseURL = 'http://localhost:3000/question_responses'\n\nfunction SurveyPage({ openSurvey }) {\n\n    const { register, handleSubmit, getValues } = useForm()\n\n\n    const json = {\n        title: `${openSurvey.title}`,\n        pages: [\n            {\n                name: 'Page 1', elements: [\n                    {type: 'panel', name: `${openSurvey.id}`, elements: []}\n                ]\n            }\n        ]\n    }\n    \n    const survey = new Survey.Survey(json)\n    \n    \n    const displayQuestions = () => {\n        // get by name method\n        const panel = survey.getPanelByName(`${openSurvey.id}`)\n        openSurvey.survey_questions.forEach(question => {\n            panel.addQuestion({\n                name: `${question.id}`,\n                title: `${questioin.content}`,\n                isRequired: true,\n                type: 'radiogroup'\n            })\n            console.log('question displayed?', question)\n        })\n    }\n\n    const onComplete = (survey, options) => {\n        console.log('survey results' + JSON.stringify(survey.data))\n    }\n    \n    const submitAnswers = (event) => {\n        event.preventDefault()\n        const answers = getValues()\n        console.log(answers)\n        const confirmation = fetch(responseURL, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(answers)\n        })\n    }\n    \n    \n    return (\n        <div>\n            {/* <h2>{openSurvey.title}</h2> */}\n            {/* <form className='questions-list'\n                onSubmit={submitAnswers}>\n\n                {displayQuestions()}\n\n                {/* <ol>\n                    {displayQuestions()}\n                </ol> */}\n                {/* <button type='submit'>Submit</button>\n            </form> */} */}\n            <Survey.Survey json={json} onComplete={onComplete} />\n            <br/>\n            <Link to='/'><button>Cancel</button></Link>\n        </div>\n    )\n}\n\nexport default SurveyPage\n"]},"metadata":{},"sourceType":"module"}