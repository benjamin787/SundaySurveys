{"ast":null,"code":"import React,{useEffect}from'react';import{Link}from'react-router-dom';import*as Survey from'survey-react';import'survey-react/survey.css';var responseURL='http://localhost:3000/question_responses';function SurveyPage(_ref){var openSurvey=_ref.openSurvey,setOpenSurvey=_ref.setOpenSurvey;var survey_questions=openSurvey.survey_questions;var makeQuestions=function makeQuestions(){return survey_questions.map(function(question){return{name:\"\".concat(question.id),title:\"\".concat(question.content),isRequired:true,type:'radiogroup'};});};var makeJSON=function makeJSON(){return{title:\"\".concat(openSurvey.title),name:\"\".concat(openSurvey.id),elements:JSON.stringify(makeQuestions())};};console.log('json',JSON.stringify(makeQuestions()));var survey=new Survey.Survey(makeJSON());console.log('survey',survey);var collectAnswers=function collectAnswers(){var answerStorage=[];survey_questions.forEach(function(question){answerStorage.push(survey.getValue(\"\".concat(question.id)));});return answerStorage;};var submitAnswers=function submitAnswers(event){event.preventDefault();fetch(responseURL,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(collectAnswers())});setOpenSurvey({});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Survey.Survey,{model:survey,onComplete:submitAnswers,questionsOnPageMode:\"singlePage\",navigateToUrl:\"/\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Link,{to:\"/\"},/*#__PURE__*/React.createElement(\"button\",null,\"Cancel\")));}export default SurveyPage;","map":{"version":3,"sources":["/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js"],"names":["React","useEffect","Link","Survey","responseURL","SurveyPage","openSurvey","setOpenSurvey","survey_questions","makeQuestions","map","question","name","id","title","content","isRequired","type","makeJSON","elements","JSON","stringify","console","log","survey","collectAnswers","answerStorage","forEach","push","getValue","submitAnswers","event","preventDefault","fetch","method","headers","body"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,cAAxB,CACA,MAAO,yBAAP,CAEA,GAAMC,CAAAA,WAAW,CAAG,0CAApB,CAEA,QAASC,CAAAA,UAAT,MAAmD,IAA7BC,CAAAA,UAA6B,MAA7BA,UAA6B,CAAjBC,aAAiB,MAAjBA,aAAiB,IAEvCC,CAAAA,gBAFuC,CAElBF,UAFkB,CAEvCE,gBAFuC,CAI/C,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,MAAOD,CAAAA,gBAAgB,CAACE,GAAjB,CAAqB,SAAAC,QAAQ,CAAI,CACpC,MACI,CAAEC,IAAI,WAAKD,QAAQ,CAACE,EAAd,CAAN,CACAC,KAAK,WAAKH,QAAQ,CAACI,OAAd,CADL,CAEAC,UAAU,CAAE,IAFZ,CAGAC,IAAI,CAAE,YAHN,CADJ,CAOH,CARM,CAAP,CASH,CAVD,CAYA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,MACI,CAAEJ,KAAK,WAAKR,UAAU,CAACQ,KAAhB,CAAP,CACIF,IAAI,WAAKN,UAAU,CAACO,EAAhB,CADR,CAEIM,QAAQ,CAAEC,IAAI,CAACC,SAAL,CAAeZ,aAAa,EAA5B,CAFd,CADJ,CAMH,CAPD,CASAa,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoBH,IAAI,CAACC,SAAL,CAAeZ,aAAa,EAA5B,CAApB,EAEA,GAAMe,CAAAA,MAAM,CAAG,GAAIrB,CAAAA,MAAM,CAACA,MAAX,CAAkBe,QAAQ,EAA1B,CAAf,CACAI,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBC,MAAtB,EAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,GAAIC,CAAAA,aAAa,CAAG,EAApB,CACAlB,gBAAgB,CAACmB,OAAjB,CAAyB,SAAAhB,QAAQ,CAAI,CACjCe,aAAa,CAACE,IAAd,CAAmBJ,MAAM,CAACK,QAAP,WAAmBlB,QAAQ,CAACE,EAA5B,EAAnB,EACH,CAFD,EAGA,MAAOa,CAAAA,aAAP,CACH,CAND,CAQA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC7BA,KAAK,CAACC,cAAN,GAEAC,KAAK,CAAC7B,WAAD,CAAc,CACf8B,MAAM,CAAE,MADO,CAEfC,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAFM,CAGfC,IAAI,CAAEhB,IAAI,CAACC,SAAL,CAAeI,cAAc,EAA7B,CAHS,CAAd,CAAL,CAKAlB,aAAa,CAAC,EAAD,CAAb,CACH,CATD,CAYA,mBACI,4CACI,oBAAC,MAAD,CAAQ,MAAR,EACI,KAAK,CAAEiB,MADX,CAEI,UAAU,CAAEM,aAFhB,CAGI,mBAAmB,CAAC,YAHxB,CAII,aAAa,CAAC,GAJlB,EADJ,cAOI,8BAPJ,cAQI,oBAAC,IAAD,EAAM,EAAE,CAAC,GAAT,eAAa,2CAAb,CARJ,CADJ,CAYH,CAED,cAAezB,CAAAA,UAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as Survey from 'survey-react'\nimport 'survey-react/survey.css'\n\nconst responseURL = 'http://localhost:3000/question_responses'\n\nfunction SurveyPage({ openSurvey, setOpenSurvey }) {\n\n    const { survey_questions } = openSurvey\n\n    const makeQuestions = () => {\n        return survey_questions.map(question => {\n            return (\n                { name: `${question.id}`,\n                title: `${question.content}`,\n                isRequired: true,\n                type: 'radiogroup',\n                }\n            )\n        })\n    }\n\n    const makeJSON = () => {\n        return (\n            { title: `${openSurvey.title}`,\n                name: `${openSurvey.id}`,\n                elements: JSON.stringify(makeQuestions())\n            }\n        )\n    }\n\n    console.log('json', JSON.stringify(makeQuestions()))\n    \n    const survey = new Survey.Survey(makeJSON())\n    console.log('survey', survey)\n\n    const collectAnswers = () => {\n        let answerStorage = []\n        survey_questions.forEach(question => {\n            answerStorage.push(survey.getValue(`${question.id}`))\n        })\n        return answerStorage\n    }\n    \n    const submitAnswers = (event) => {\n        event.preventDefault()\n\n        fetch(responseURL, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(collectAnswers())\n        })\n        setOpenSurvey({})\n    }\n    \n    \n    return (\n        <div>\n            <Survey.Survey\n                model={survey}\n                onComplete={submitAnswers}\n                questionsOnPageMode='singlePage'\n                navigateToUrl='/'\n            />\n            <br/>\n            <Link to='/'><button>Cancel</button></Link>\n        </div>\n    )\n}\n\nexport default SurveyPage\n"]},"metadata":{},"sourceType":"module"}