{"ast":null,"code":"var _jsxFileName = \"/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport RadioGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nconst responseURL = 'http://localhost:3000/question_responses';\n\nfunction SurveyPage({\n  openSurvey\n}) {\n  const {\n    register,\n    handleSubmit,\n    getValues\n  } = useForm();\n  const [choice, setChoice] = useState(0);\n\n  const handleChange = event => {\n    setChoice(event.target.value);\n  };\n\n  const displayQuestions = () => {\n    openSurvey.survey_questions.map(question => {\n      console.log('question displayed?', question);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, question.content), /*#__PURE__*/React.createElement(FormControl, {\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, question.content), /*#__PURE__*/React.createElement(RadioGroup, {\n        name: question.id,\n        value: choice,\n        row: true,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, displayOptions())));\n    });\n  };\n\n  const displayOptions = () => {\n    for (const i in [1, 2, 3, 4]) {\n      return /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Radio, {\n          name: \"option\",\n          inputRef: register,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 26\n          }\n        }),\n        value: i,\n        label: i,\n        labelPlacement: \"bottom\",\n        checked: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 22\n        }\n      });\n    }\n  }; //         return ( \n  //             <li className='question-li' key={question.id}>\n  //                 <label>{question.content}</label>\n  //                 <input name={question.id} type='checkbox' ref={register({required: true})} />\n  //             </li>\n  //         )\n  //     })\n  // }\n\n\n  const respondToSubmit = boolean => {\n    const buttonResponse = boolean ? 'Thanks for your submission!' : 'Please check that all questions have been answered.';\n    return alert(buttonResponse); // return <button>{buttonResponse}</button> \n  };\n\n  const submitAnswers = event => {\n    console.log(event);\n    event.preventDefault();\n    const answers = getValues();\n    const confirmation = fetch(responseURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(answers)\n    });\n    respondToSubmit(confirmation);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, openSurvey.title), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"questions-list\",\n    onSubmit: submitAnswers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, displayQuestions(), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 26\n    }\n  }, \"Cancel\")));\n}\n\nexport default SurveyPage;","map":{"version":3,"sources":["/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js"],"names":["React","useState","useForm","Link","RadioGroup","Radio","ListItem","FormControl","FormControlLabel","FormLabel","responseURL","SurveyPage","openSurvey","register","handleSubmit","getValues","choice","setChoice","handleChange","event","target","value","displayQuestions","survey_questions","map","question","console","log","content","id","displayOptions","i","respondToSubmit","boolean","buttonResponse","alert","submitAnswers","preventDefault","answers","confirmation","fetch","method","headers","body","JSON","stringify","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { Link } from 'react-router-dom'\nimport RadioGroup from '@material-ui/core/FormGroup'\nimport Radio from '@material-ui/core/Radio'\nimport ListItem from '@material-ui/core/ListItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nconst responseURL = 'http://localhost:3000/question_responses'\n\nfunction SurveyPage({ openSurvey }) {\n\n    const { register, handleSubmit, getValues } = useForm()\n\n    const [choice, setChoice] = useState(0)\n\n\n    \n    const handleChange = (event) => {\n        setChoice(event.target.value)\n    }\n\n    const displayQuestions = () => {\n        openSurvey.survey_questions.map(question => {\n            console.log('question displayed?', question)\n            return ( \n                <div>\n                    <p>{question.content}</p>\n                    <FormControl required={true} >\n                        <FormLabel>{question.content}</FormLabel>\n                        <RadioGroup name={question.id} value={choice} row onChange={handleChange} >\n                            {displayOptions()}\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n            )\n        })\n    }\n\n    const displayOptions = () => {\n        for (const i in [1, 2, 3, 4]) {\n            return ( <FormControlLabel\n                control={<Radio name='option' inputRef={register} />}\n                value={i}\n                label={i}\n                labelPlacement='bottom'\n                checked={false}\n            /> )\n    }\n    }\n    //         return ( \n    //             <li className='question-li' key={question.id}>\n    //                 <label>{question.content}</label>\n    //                 <input name={question.id} type='checkbox' ref={register({required: true})} />\n    //             </li>\n    //         )\n    //     })\n    // }\n\n    const respondToSubmit = (boolean) => {\n        const buttonResponse = boolean\n            ? 'Thanks for your submission!'\n            : 'Please check that all questions have been answered.'\n        return alert(buttonResponse)\n        // return <button>{buttonResponse}</button> \n    }\n\n    const submitAnswers = (event) => {\n        console.log(event)\n        event.preventDefault()\n        const answers = getValues()\n        const confirmation = fetch(responseURL, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(answers)\n        })\n        respondToSubmit(confirmation)\n    }\n    \n    \n    return (\n        <div>\n            <h2>{openSurvey.title}</h2>\n            <form className='questions-list'\n                onSubmit={submitAnswers}>\n\n                {displayQuestions()}\n\n                {/* <ol>\n                    {displayQuestions()}\n                </ol> */}\n                <button type='submit'>Submit</button>\n            </form>\n            <br/>\n            <Link to='/'><button>Cancel</button></Link>\n        </div>\n    )\n}\n\nexport default SurveyPage\n"]},"metadata":{},"sourceType":"module"}