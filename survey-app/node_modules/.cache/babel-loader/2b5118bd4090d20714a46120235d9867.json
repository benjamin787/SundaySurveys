{"ast":null,"code":"var _jsxFileName = \"/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport RadioGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\nconst responseURL = 'http://localhost:3000/question_responses';\n\nfunction SurveyPage({\n  openSurvey\n}) {\n  const {\n    survey_questions\n  } = openSurvey;\n  const json = {\n    title: `${openSurvey.title}`,\n    pages: [{\n      name: `${openSurvey.id}`,\n      elements: []\n    }]\n  };\n  const survey = new Survey.Model(json);\n  const page = survey.getPageByName(`${openSurvey.id}`);\n  useEffect(() => {\n    survey_questions.forEach(question => {\n      page.addQuestion({\n        name: `${question.id}`,\n        title: `${question.content}`,\n        isRequired: true,\n        type: 'radiogroup'\n      });\n      console.log('question displayed?', question);\n    });\n  });\n\n  const collectAnswers = () => {};\n\n  const submitAnswers = event => {\n    event.preventDefault();\n    const answers = survey_questions.map(question => {\n      return survey.getValue(`${question.id}`);\n    });\n    console.log(answers);\n    fetch(responseURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(answers)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Survey.Survey, {\n    model: survey,\n    onComplete: submitAnswers,\n    questionsOnPageMode: \"singlePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }\n  }, \"Cancel\")));\n}\n\nexport default SurveyPage;","map":{"version":3,"sources":["/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js"],"names":["React","useEffect","Link","RadioGroup","Radio","ListItem","FormControl","FormControlLabel","FormLabel","Survey","responseURL","SurveyPage","openSurvey","survey_questions","json","title","pages","name","id","elements","survey","Model","page","getPageByName","forEach","question","addQuestion","content","isRequired","type","console","log","collectAnswers","submitAnswers","event","preventDefault","answers","map","getValue","fetch","method","headers","body","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;AACA,OAAO,yBAAP;AAEA,MAAMC,WAAW,GAAG,0CAApB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAoC;AAEhC,QAAM;AAAEC,IAAAA;AAAF,MAAuBD,UAA7B;AAEA,QAAME,IAAI,GAAG;AACTC,IAAAA,KAAK,EAAG,GAAEH,UAAU,CAACG,KAAM,EADlB;AAETC,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAG,GAAEL,UAAU,CAACM,EAAG,EAAzB;AAA4BC,MAAAA,QAAQ,EAAE;AAAtC,KAAD;AAFE,GAAb;AAKA,QAAMC,MAAM,GAAG,IAAIX,MAAM,CAACY,KAAX,CAAiBP,IAAjB,CAAf;AACA,QAAMQ,IAAI,GAAGF,MAAM,CAACG,aAAP,CAAsB,GAAEX,UAAU,CAACM,EAAG,EAAtC,CAAb;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,gBAAgB,CAACW,OAAjB,CAAyBC,QAAQ,IAAI;AACjCH,MAAAA,IAAI,CAACI,WAAL,CAAiB;AACbT,QAAAA,IAAI,EAAG,GAAEQ,QAAQ,CAACP,EAAG,EADR;AAEbH,QAAAA,KAAK,EAAG,GAAEU,QAAQ,CAACE,OAAQ,EAFd;AAGbC,QAAAA,UAAU,EAAE,IAHC;AAIbC,QAAAA,IAAI,EAAE;AAJO,OAAjB;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCN,QAAnC;AACH,KARD;AASH,GAVQ,CAAT;;AAYA,QAAMO,cAAc,GAAG,MAAM,CAAE,CAA/B;;AAEA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,OAAO,GAAGvB,gBAAgB,CAACwB,GAAjB,CAAqBZ,QAAQ,IAAI;AAC7C,aAAOL,MAAM,CAACkB,QAAP,CAAiB,GAAEb,QAAQ,CAACP,EAAG,EAA/B,CAAP;AACH,KAFe,CAAhB;AAGAY,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACAG,IAAAA,KAAK,CAAC7B,WAAD,EAAc;AACf8B,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFM;AAGfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AAHS,KAAd,CAAL;AAKH,GAXD;;AAcA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,CAAQ,MAAR;AACI,IAAA,KAAK,EAAEhB,MADX;AAEI,IAAA,UAAU,EAAEa,aAFhB;AAGI,IAAA,mBAAmB,EAAC,YAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb,CAPJ,CADJ;AAWH;;AAED,eAAetB,UAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport RadioGroup from '@material-ui/core/FormGroup'\nimport Radio from '@material-ui/core/Radio'\nimport ListItem from '@material-ui/core/ListItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport * as Survey from 'survey-react'\nimport 'survey-react/survey.css'\n\nconst responseURL = 'http://localhost:3000/question_responses'\n\nfunction SurveyPage({ openSurvey }) {\n\n    const { survey_questions } = openSurvey\n\n    const json = {\n        title: `${openSurvey.title}`,\n        pages: [{ name: `${openSurvey.id}`, elements: [] }]\n    }\n    \n    const survey = new Survey.Model(json)\n    const page = survey.getPageByName(`${openSurvey.id}`)\n    \n    useEffect(() => {\n        survey_questions.forEach(question => {\n            page.addQuestion({\n                name: `${question.id}`,\n                title: `${question.content}`,\n                isRequired: true,\n                type: 'radiogroup'\n            })\n            console.log('question displayed?', question)\n        })\n    })\n\n    const collectAnswers = () => {}\n    \n    const submitAnswers = (event) => {\n        event.preventDefault()\n        const answers = survey_questions.map(question => {\n            return survey.getValue(`${question.id}`)\n        })\n        console.log(answers)\n        fetch(responseURL, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(answers)\n        })\n    }\n    \n    \n    return (\n        <div>\n            <Survey.Survey\n                model={survey}\n                onComplete={submitAnswers}\n                questionsOnPageMode='singlePage'\n            />\n            <br/>\n            <Link to='/'><button>Cancel</button></Link>\n        </div>\n    )\n}\n\nexport default SurveyPage\n"]},"metadata":{},"sourceType":"module"}