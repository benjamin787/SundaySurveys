{"ast":null,"code":"var _jsxFileName = \"/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js\";\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport RadioGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\nconst responseURL = 'http://localhost:3000/question_responses';\n\nfunction SurveyPage({\n  openSurvey\n}) {\n  const {\n    register,\n    handleSubmit,\n    getValues\n  } = useForm();\n  const {\n    survey_questions\n  } = openSurvey;\n  const json = {\n    title: `${openSurvey.title}`,\n    pages: [{\n      name: `${openSurvey.id}`,\n      elements: []\n    }]\n  };\n  const survey = new Survey.Model(json);\n  const panel = survey.getPanelByName(`${openSurvey.id}`);\n  useEffect(() => {\n    survey_questions.forEach(question => {\n      panel.addQuestion({\n        name: `${question.id}`,\n        title: `${question.content}`,\n        isRequired: true,\n        type: 'radiogroup'\n      });\n      console.log('question displayed?', question);\n    });\n  });\n\n  const submitAnswers = event => {\n    event.preventDefault();\n    const answers = survey.getValues();\n    console.log(answers);\n    const confirmation = fetch(responseURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(answers)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \" */}\", /*#__PURE__*/React.createElement(Survey.Survey, {\n    model: survey,\n    onComplete: submitAnswers,\n    questionsOnPageMode: \"singlePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }\n  }, \"Cancel\")));\n}\n\nexport default SurveyPage;","map":{"version":3,"sources":["/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js"],"names":["React","useEffect","useForm","Link","RadioGroup","Radio","ListItem","FormControl","FormControlLabel","FormLabel","Survey","responseURL","SurveyPage","openSurvey","register","handleSubmit","getValues","survey_questions","json","title","pages","name","id","elements","survey","Model","panel","getPanelByName","forEach","question","addQuestion","content","isRequired","type","console","log","submitAnswers","event","preventDefault","answers","confirmation","fetch","method","headers","body","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;AACA,OAAO,yBAAP;AAEA,MAAMC,WAAW,GAAG,0CAApB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAoC;AAEhC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAwCd,OAAO,EAArD;AAEA,QAAM;AAAEe,IAAAA;AAAF,MAAuBJ,UAA7B;AAEA,QAAMK,IAAI,GAAG;AACTC,IAAAA,KAAK,EAAG,GAAEN,UAAU,CAACM,KAAM,EADlB;AAETC,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAG,GAAER,UAAU,CAACS,EAAG,EAAzB;AAA4BC,MAAAA,QAAQ,EAAE;AAAtC,KAAD;AAFE,GAAb;AAKA,QAAMC,MAAM,GAAG,IAAId,MAAM,CAACe,KAAX,CAAiBP,IAAjB,CAAf;AACA,QAAMQ,KAAK,GAAGF,MAAM,CAACG,cAAP,CAAuB,GAAEd,UAAU,CAACS,EAAG,EAAvC,CAAd;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,gBAAgB,CAACW,OAAjB,CAAyBC,QAAQ,IAAI;AACjCH,MAAAA,KAAK,CAACI,WAAN,CAAkB;AACdT,QAAAA,IAAI,EAAG,GAAEQ,QAAQ,CAACP,EAAG,EADP;AAEdH,QAAAA,KAAK,EAAG,GAAEU,QAAQ,CAACE,OAAQ,EAFb;AAGdC,QAAAA,UAAU,EAAE,IAHE;AAIdC,QAAAA,IAAI,EAAE;AAJQ,OAAlB;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCN,QAAnC;AACH,KARD;AASH,GAVQ,CAAT;;AAYA,QAAMO,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,OAAO,GAAGf,MAAM,CAACR,SAAP,EAAhB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACA,UAAMC,YAAY,GAAGC,KAAK,CAAC9B,WAAD,EAAc;AACpC+B,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAF2B;AAGpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AAH8B,KAAd,CAA1B;AAKH,GATD;;AAYA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAYI,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAEf,MAAtB;AAA8B,IAAA,UAAU,EAAEY,aAA1C;AAAyD,IAAA,mBAAmB,EAAC,YAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,eAcI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb,CAdJ,CADJ;AAkBH;;AAED,eAAexB,UAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { Link } from 'react-router-dom'\nimport RadioGroup from '@material-ui/core/FormGroup'\nimport Radio from '@material-ui/core/Radio'\nimport ListItem from '@material-ui/core/ListItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport * as Survey from 'survey-react'\nimport 'survey-react/survey.css'\n\nconst responseURL = 'http://localhost:3000/question_responses'\n\nfunction SurveyPage({ openSurvey }) {\n\n    const { register, handleSubmit, getValues } = useForm()\n\n    const { survey_questions } = openSurvey\n\n    const json = {\n        title: `${openSurvey.title}`,\n        pages: [{ name: `${openSurvey.id}`, elements: [] }]\n    }\n    \n    const survey = new Survey.Model(json)\n    const panel = survey.getPanelByName(`${openSurvey.id}`)\n    \n    useEffect(() => {\n        survey_questions.forEach(question => {\n            panel.addQuestion({\n                name: `${question.id}`,\n                title: `${question.content}`,\n                isRequired: true,\n                type: 'radiogroup'\n            })\n            console.log('question displayed?', question)\n        })\n    })\n    \n    const submitAnswers = (event) => {\n        event.preventDefault()\n        const answers = survey.getValues()\n        console.log(answers)\n        const confirmation = fetch(responseURL, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(answers)\n        })\n    }\n    \n    \n    return (\n        <div>\n            {/* <h2>{openSurvey.title}</h2> */}\n            {/* <form className='questions-list'\n                onSubmit={submitAnswers}>\n\n                {displayQuestions()}\n\n                {/* <ol>\n                    {displayQuestions()}\n                </ol> */}\n                {/* <button type='submit'>Submit</button>\n            </form> */} */}\n            <Survey.Survey model={survey} onComplete={submitAnswers} questionsOnPageMode='singlePage' />\n            <br/>\n            <Link to='/'><button>Cancel</button></Link>\n        </div>\n    )\n}\n\nexport default SurveyPage\n"]},"metadata":{},"sourceType":"module"}