{"ast":null,"code":"var _jsxFileName = \"/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\nconst responseURL = 'http://localhost:3000/question_responses';\n\nfunction SurveyPage({\n  openSurvey\n}) {\n  const {\n    survey_questions\n  } = openSurvey;\n  const json = {\n    title: `${openSurvey.title}`,\n    pages: [{\n      name: 'Page 1',\n      elements: [{\n        name: `${openSurvey.id}`,\n        elements: []\n      }]\n    }]\n  };\n  const survey = new Survey.Model(json);\n  const panel = survey.getPanelByName(`${openSurvey.id}`);\n  useEffect(() => {\n    const loadDelay = setTimeout(() => {});\n    console.log('panel', panel);\n    console.log('useEffect hits');\n    console.log('questions', survey_questions);\n    survey_questions.forEach(question => {\n      console.log('uE loop hits');\n      panel.addNewQuestion({\n        name: `${question.id}`,\n        title: `${question.content}`,\n        isRequired: true,\n        questionType: 'radiogroup'\n      });\n    });\n  });\n\n  const collectAnswers = () => {\n    return survey_questions.map(question => {\n      return survey.getValue(`${question.id}`);\n    });\n  };\n\n  const submitAnswers = event => {\n    event.preventDefault();\n    console.log('collected answers', collectAnswers());\n    fetch(responseURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(collectAnswers())\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Survey.Survey, {\n    model: survey,\n    onComplete: submitAnswers,\n    questionsOnPageMode: \"singlePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }\n  }, \"Cancel\")));\n}\n\nexport default SurveyPage;","map":{"version":3,"sources":["/Users/benrowe/Development/Flatiron/comeback/4mod/project/survey-app/src/components/SurveyPage.js"],"names":["React","useEffect","Link","Survey","responseURL","SurveyPage","openSurvey","survey_questions","json","title","pages","name","elements","id","survey","Model","panel","getPanelByName","loadDelay","setTimeout","console","log","forEach","question","addNewQuestion","content","isRequired","questionType","collectAnswers","map","getValue","submitAnswers","event","preventDefault","fetch","method","headers","body","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;AACA,OAAO,yBAAP;AAEA,MAAMC,WAAW,GAAG,0CAApB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAoC;AAEhC,QAAM;AAAEC,IAAAA;AAAF,MAAuBD,UAA7B;AAEA,QAAME,IAAI,GAAG;AACTC,IAAAA,KAAK,EAAG,GAAEH,UAAU,CAACG,KAAM,EADlB;AAETC,IAAAA,KAAK,EAAE,CACH;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,QAAQ,EAAE,CACxB;AAAED,QAAAA,IAAI,EAAG,GAAEL,UAAU,CAACO,EAAG,EAAzB;AAA4BD,QAAAA,QAAQ,EAAE;AAAtC,OADwB;AAA5B,KADG;AAFE,GAAb;AASA,QAAME,MAAM,GAAG,IAAIX,MAAM,CAACY,KAAX,CAAiBP,IAAjB,CAAf;AACA,QAAMQ,KAAK,GAAGF,MAAM,CAACG,cAAP,CAAuB,GAAEX,UAAU,CAACO,EAAG,EAAvC,CAAd;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,SAAS,GAAGC,UAAU,CAAC,MAAM,CAElC,CAF2B,CAA5B;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBd,gBAAzB;AACAA,IAAAA,gBAAgB,CAACe,OAAjB,CAAyBC,QAAQ,IAAI;AACjCH,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAL,MAAAA,KAAK,CAACQ,cAAN,CAAqB;AACjBb,QAAAA,IAAI,EAAG,GAAEY,QAAQ,CAACV,EAAG,EADJ;AAEjBJ,QAAAA,KAAK,EAAG,GAAEc,QAAQ,CAACE,OAAQ,EAFV;AAGjBC,QAAAA,UAAU,EAAE,IAHK;AAIjBC,QAAAA,YAAY,EAAE;AAJG,OAArB;AAMH,KARD;AASH,GAhBQ,CAAT;;AAkBA,QAAMC,cAAc,GAAG,MAAM;AACzB,WAAOrB,gBAAgB,CAACsB,GAAjB,CAAqBN,QAAQ,IAAI;AACpC,aAAOT,MAAM,CAACgB,QAAP,CAAiB,GAAEP,QAAQ,CAACV,EAAG,EAA/B,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAMA,QAAMkB,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AAEAb,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCO,cAAc,EAA/C;AAEAM,IAAAA,KAAK,CAAC9B,WAAD,EAAc;AACf+B,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFM;AAGfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,cAAc,EAA7B;AAHS,KAAd,CAAL;AAKH,GAVD;;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,CAAQ,MAAR;AACI,IAAA,KAAK,EAAEd,MADX;AAEI,IAAA,UAAU,EAAEiB,aAFhB;AAGI,IAAA,mBAAmB,EAAC,YAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb,CAPJ,CADJ;AAWH;;AAED,eAAe1B,UAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as Survey from 'survey-react'\nimport 'survey-react/survey.css'\n\nconst responseURL = 'http://localhost:3000/question_responses'\n\nfunction SurveyPage({ openSurvey }) {\n\n    const { survey_questions } = openSurvey\n\n    const json = {\n        title: `${openSurvey.title}`,\n        pages: [\n            { name: 'Page 1', elements: [\n                { name: `${openSurvey.id}`, elements: [] }\n            ] }\n        ]\n    }\n    \n    const survey = new Survey.Model(json)\n    const panel = survey.getPanelByName(`${openSurvey.id}`)\n    \n    useEffect(() => {\n        const loadDelay = setTimeout(() => {\n            \n        })\n        console.log('panel', panel)\n        console.log('useEffect hits')\n        console.log('questions', survey_questions)\n        survey_questions.forEach(question => {\n            console.log('uE loop hits')\n            panel.addNewQuestion({\n                name: `${question.id}`,\n                title: `${question.content}`,\n                isRequired: true,\n                questionType: 'radiogroup'\n            })\n        })\n    })\n\n    const collectAnswers = () => {\n        return survey_questions.map(question => {\n            return survey.getValue(`${question.id}`)\n        })\n    }\n    \n    const submitAnswers = (event) => {\n        event.preventDefault()\n        \n        console.log('collected answers', collectAnswers())\n\n        fetch(responseURL, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(collectAnswers())\n        })\n    }\n    \n    \n    return (\n        <div>\n            <Survey.Survey\n                model={survey}\n                onComplete={submitAnswers}\n                questionsOnPageMode='singlePage'\n            />\n            <br/>\n            <Link to='/'><button>Cancel</button></Link>\n        </div>\n    )\n}\n\nexport default SurveyPage\n"]},"metadata":{},"sourceType":"module"}